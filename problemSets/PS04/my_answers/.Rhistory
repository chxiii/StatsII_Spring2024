list(All = "All", Unvaccinated= "Unvaccinated", Vaccinated = "Vaccinated") |>
lapply(function(g)
list(
rating = lm_robust(rating ~ severity*universality*stringency, fixed_effects = ~ ID,
data = df_long_all, subset = group == g, se_type = "stata"),
choice = lm_robust(choice ~ severity*universality*stringency,  fixed_effects = ~ ID,
data = df_long_all, subset = group == g, se_type = "stata"),
trust = lm_robust(trust ~ severity*universality*stringency,  fixed_effects = ~ ID,
data = df_long_all, subset = group == g, se_type = "stata"))
)
View(df_long)
summary(fig_1_models[["All"]][["rating"]])
contri_model_1 <- glm(choice ~ severity*universality*stringency, family="binomial", data=df_long_all)
summary(contri_model_1)
contri_model_2 <- glm(choice ~ severity+universality+stringency, family="binomial", data=df_long_all)
summary(contri_model_2)
stargazer(anova(contri_model_1, contri_model_2, test = "Chisq"))
COX <- coxph(Surv(age, death) ~ motherage + gender, data = child)
summary(COX)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("eha", "ggplot2", "stargazer"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#####################
# Problem 1
#####################
# load data
dat <- child # use the child data set in eha
# from the eha network codebook,
# https://cran.r-project.org/web/packages/eha/eha.pdf - page 13
# we can see the instruction
#
COX <- coxph(Surv(age, death) ~ motherage + gender, data = child)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("eha", "ggplot2", "stargazer", "survival"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#####################
# Problem 1
#####################
# load data
dat <- child # use the child data set in eha
# from the eha network codebook,
# https://cran.r-project.org/web/packages/eha/eha.pdf - page 13
# we can see the instruction
#
COX <- coxph(Surv(age, death) ~ motherage + gender, data=dat)
View(dat)
dat
COX <- coxph(exit ~ sex + m.age, data=dat)
View(dat)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("eha", "ggplot2", "stargazer", "survival"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#####################
# Problem 1
#####################
# load data
dat <- child # use the child data set in eha
dat
# from the eha network codebook,
# https://cran.r-project.org/web/packages/eha/eha.pdf - page 13
# we can see the instruction
#
survival_object <- Surv(dat$enter, event=dat$event)
COX <- coxph(survival_object ~ sex + m.age, data=dat)
summary(COX)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("eha", "ggplot2", "stargazer", "survival"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#####################
# Problem 1
#####################
# load data
dat <- child # use the child data set in eha
dat
# from the eha network codebook,
# https://cran.r-project.org/web/packages/eha/eha.pdf - page 13
# we can see the instruction
#
child_surv <- with(child, Surv(enter, exit, event))
km <- survfit(child_surv ~ 1, data = child)
summary(km, times = seq(0, 15, 1))
plot(km, main = "Kaplan-Meier Plot", xlab = "Years", ylim = c(0.7, 1))
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
labs(title = "Kaplan-Meier Plot", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_minimal()
ggplot(dat, aes(x = time, y = surv)) +
geom_step() +
labs(title = "Kaplan-Meier Plot", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_minimal()
ggplot(km, aes(x = time, y = surv)) +
geom_step() +
labs(title = "Kaplan-Meier Plot", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_minimal()
km_data <- data.frame(time = km$time, surv = km$surv)
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
labs(title = "Kaplan-Meier Plot", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_minimal()
km_data <- data.frame(time = km$time, surv = km$surv)
# 提取置信区间的上下限
lower_ci <- km$lower
upper_ci <- km$upper
# 使用 ggplot 绘制 Kaplan-Meier 曲线和置信区间
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci), alpha = 0.2) +  # 添加置信区间
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_minimal()
plot(km, main = "Kaplan-Meier Plot", xlab = "Years", ylim = c(0.7, 1))
# 使用 ggplot 绘制 Kaplan-Meier 曲线和置信区间
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci), alpha = 0.2) +  # 添加置信区间
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_bw()
# visualisation the curve
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci), alpha = 0.5) +
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_bw()
# visualisation the curve
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci),
fill="#DBE2EF", alpha = 0.5) +
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_bw()
# visualisation the curve
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci),
fill="#3F72AF", alpha = 0.5) +
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_bw()
# visualisation the curve
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci),
fill="#3F72AF", color="black", alpha = 0.5) +
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_bw()
# visualisation the curve
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci),
fill="#3F72AF", color="black", linetype = "dashed", alpha = 0.5) +
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_bw()
# visualisation the curve
pdf("Kaplan-Meier Plot")
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci),
fill="#3F72AF", color="black", linetype = "dashed", alpha = 0.5) +
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_bw()
dev.off()
autoplot(km)
km_socBranch <- survfit(child_surv ~ socBranch, data = child)
summary (km_socBranch)
autoplot(km_socBranch)
km_sexBranch <- survfit(child_surv ~ sex, data = child)
ggplot(km_sexBranch, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci),
fill="#3F72AF", color="black", linetype = "dashed", alpha = 0.5) +
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_bw()
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("eha", "ggplot2", "stargazer", "survival"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#####################
# Problem 1
#####################
# load data
dat <- child # use the child data set in eha
# from the eha network codebook,
# https://cran.r-project.org/web/packages/eha/eha.pdf - page 13
# we can see the instruction
#
child_surv <- with(child, Surv(enter, exit, event))
km <- survfit(child_surv ~ 1, data = child)
summary(km, times = seq(0, 15, 1))
km_data <- data.frame(time = km$time, surv = km$surv)
# get CI
lower_ci <- km$lower
upper_ci <- km$upper
# visualisation the curve
pdf("Kaplan-Meier Plot")
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci),
fill="#3F72AF", color="black", linetype = "dashed", alpha = 0.5) +
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_bw()
dev.off()
COX <- coxph(child_surv ~ sex + m.age, data = child)
summary(COX)
COX <- coxph(child_surv ~ sex + m.age, data = dat)
summary(COX)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("eha", "ggplot2", "stargazer", "survival"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#####################
# Problem 1
#####################
# load data
dat <- child # use the child data set in eha
# from the eha network codebook,
# https://cran.r-project.org/web/packages/eha/eha.pdf - page 13
# we can see the instruction
# - sex: Sex
# - m.age: mother age
child_surv <- with(child, Surv(enter, exit, event))
km <- survfit(child_surv ~ 1, data = child)
summary(km, times = seq(0, 15, 1))
km_data <- data.frame(time = km$time, surv = km$surv)
# get CI
lower_ci <- km$lower
upper_ci <- km$upper
# visualisation the curve
pdf("Kaplan-Meier Plot")
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci),
fill="#3F72AF", color="black", linetype = "dashed", alpha = 0.5) +
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_bw()
dev.off()
COX <- coxph(child_surv ~ sex + m.age, data = dat)
summary(COX)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("eha", "ggplot2", "stargazer", "survival"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#####################
# Problem 1
#####################
# load data
dat <- child # use the child data set in eha
# from the eha network codebook,
# https://cran.r-project.org/web/packages/eha/eha.pdf - page 13
# we can see the instruction
# - sex: Sex
# - m.age: mother age
child_surv <- with(child, Surv(enter, exit, event))
km <- survfit(child_surv ~ 1, data = child)
summary(km, times = seq(0, 15, 1))
km_data <- data.frame(time = km$time, surv = km$surv)
# get CI
lower_ci <- km$lower
upper_ci <- km$upper
# visualisation the curve
pdf("Kaplan-Meier Plot.pdf")
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci),
fill="#3F72AF", color="black", linetype = "dashed", alpha = 0.5) +
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_bw()
dev.off()
COX <- coxph(child_surv ~ sex + m.age, data = dat)
summary(COX)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("eha", "ggplot2", "stargazer", "survival"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#####################
# Problem 1
#####################
# load data
dat <- child # use the child data set in eha
# from the eha network codebook,
# https://cran.r-project.org/web/packages/eha/eha.pdf - page 13
# we can see the instruction
# - sex: Sex
# - m.age: mother age
child_surv <- with(child, Surv(enter, exit, event))
km <- survfit(child_surv ~ 1, data = child)
summary(km, times = seq(0, 15, 1))
km_data <- data.frame(time = km$time, surv = km$surv)
# get CI
lower_ci <- km$lower
upper_ci <- km$upper
# visualisation the curve
pdf("Kaplan-Meier.pdf")
ggplot(km_data, aes(x = time, y = surv)) +
geom_step() +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci),
fill="#3F72AF", color="black", linetype = "dashed", alpha = 0.5) +
labs(title = "Kaplan-Meier Plot with Confidence Interval", x = "Years", y = "Survival Probability") +
ylim(0.7, 1) +
theme_bw()
dev.off()
COX <- coxph(child_surv ~ sex + m.age, data = dat)
summary(COX)
